version: "3.9"

services:
  postgres:
    image: postgres:13
    container_name: etl_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  airflow:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    image: etl_airflow:latest
    container_name: etl_airflow
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "7d3xKQ1vWbWg3RkzZVN8sHUl7OHg7oCKs4MJfJH+R0Y="  # <-- valid 32-byte key
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__RBAC: "True"
      _AIRFLOW_WWW_USER_USERNAME: airflow
      _AIRFLOW_WWW_USER_PASSWORD: airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./dbt:/opt/airflow/dbt
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username airflow --password airflow --firstname airflow --lastname airflow --role Admin --email airflow@example.com || true &&
        airflow webserver
      "
    healthcheck:
      test: ["CMD-SHELL", "airflow db check"]
      interval: 10s
      retries: 10
    ports:
      - "8080:8080"

  airflow-scheduler:
    image: etl_airflow:latest
    container_name: etl_airflow_scheduler
    depends_on:
      airflow:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "7d3xKQ1vWbWg3RkzZVN8sHUl7OHg7oCKs4MJfJH+R0Y="
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./dbt:/opt/airflow/dbt
    command: bash -c "airflow scheduler"

  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.7.0
    container_name: etl_dbt
    depends_on:
      - postgres
    environment:
      DBT_PROFILES_DIR: /root/.dbt
    volumes:
      - ./dbt:/usr/app/dbt
    working_dir: /usr/app/dbt

volumes:
  postgres_data:
